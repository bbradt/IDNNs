# CS 523 Spring 2018 Project 1
# The Coupled Logistic Map
# Brad Baker (bbaker@mrn.org and bbradt@unm.edu)
# Brandon Boos (btboos@unm.edu)

####################### Figures 1, 4, 5, (6) #######################
Author: Brad Baker

The code to generate these figures was tested in Python Version 2.7 on Windows 10.
See the file Baker_Project1_Part2.py for individual functionality comments, and more details.

!! THIS CODE IS NOT COMPATIBLE WITH PYTHON 3 -- DO NOT TRY TO RUN IT IN A PYTHON 3 ENVIRONMENT !!
Required Libraries:
	numpy, matplotlib, seaborn, jpype, progressbar	

External Installations:
	JIDT 1.4 (http://lizier.me/joseph/software/jidt/download.php?file=infodynamics-dist-1.4.zip)

The code assumes the infodynamics distribution is located in a local folder named "infodynamics-dist-1.4"
It also assumes you have properly configured JIDT, along with the JAVA_HOME environment variable. See the JIDT docs for details.

The code by default only generates figures 1, 4, and 5, which were included in the report; however,
it is capable of generating figures 2, 3, and figure 6 in the appendix. 
To have the code generate these figures, edit Baker_Project1_Part2.py and uncomment line 321 therein. 

Note that the runtime for figure 4 is about 5-10 minutes, and the runtime for figures 2, 3 is 15+ minutes
under default parameters.

Parameters are currently hard-coded - and need to be individually configured for each figure.

######################## Figures 2, 3 ############################
Author: Brandon Boos

Include in Code file:
infodynamics-dist-1.4 which is the file containing JIDT

For the code for Figures 2 and 3:

The Code was written and run in MATLAB R2017a

To view the code, open the files in MATLAB

Code:
paperFig3and4.m - The main file. Running this will generate the figures for 3 and 4 and will take about 10-15min. To reproduce our results exactly add the included Data file to the path and uncomment lines 20 and 21.
transferEntropy.m - The code generate from JIDT to calculate transfer entropy.
plotMany.m - Used to produce figures for all epsilon values. It generates a lot of figures (400ish). Run using the M and epVal in workspace after running paperFig3and4.m

Data:
rngSeed.mat - the rng seed to exactly reproduce results. Include this files in path and uncomment line 20-21 of paperFig3and4.m to use.
EntireWorkSpace.mat - loads the entire workspace after running paperFig3and4.m with rngSeed.mat . If you load this file the figures can be generated in a few seconds by only evaluating lines 78-165.

To run the code open MATLAB and add the code file to the path. Next, there are several option to run the code:
1) Open paperFig3and4.m in MATLAB and run. It will take 10-15min and generate results with a random seed.
2) Add the Data folder to the path and uncomment lines 20-21 of paperFig3and4.m. It will take 10-15min and generate results with the seed used for figures in the paper.
3) Load EntireWorkSpace.mat. Figures can then be generated by evaluating lines 78-165 of  paperFig3and4.m

